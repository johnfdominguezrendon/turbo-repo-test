name: Pipeline
on: 
#   push:
  pull_request:
jobs:
  checks:
    runs-on: ubuntu-latest
    name: Build
    env:
      TURBO_RUN_FILTER: ${{ github.event_name == 'pull_request' && '...[origin/main]' || '...[HEAD^]' }}
    outputs:
      changed-app: ${{ steps.changed-app.outputs.result }}
      changed-docs: ${{ steps.changed-docs.outputs.result }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
        
      - name: Install Dependencies
        run: npm install

      - name: Changeset
        id: changeset
        run: |
          echo '${{ env.TURBO_RUN_FILTER }}'
          npx turbo --version
          npx turbo build --filter=...[origin/main] --dry-run=json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=result::$content"

      - name: Changed app?
        id: changed-app
        # 1. Using the 'output' of the 'changeset' step inside the `if` to check if the specific app has changed
        # 2. When `true`, we store it in the 'output' of the current step.
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, 'app') }}
        run: |
          echo "::set-output name=result::true"

      - name: Changed docs?
        id: changed-docs
        # 1. Using the 'output' of the 'changeset' step inside the `if` to check if the specific app has changed
        # 2. When `true`, we store it in the 'output' of the current step.
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, 'docs') }}
        run: |
          echo "::set-output name=result::true"


    