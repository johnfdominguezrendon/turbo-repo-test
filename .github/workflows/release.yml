name: Manual Semantic Release

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  APP_VERSION: '1.0.21'  # Default version, will be updated dynamically
jobs:
  prepare_release:
    runs-on: ubuntu-latest
    environment: pre-release
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Authenticate gh
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "USING_TAG=$latest" >> $GITHUB_ENV
          echo "The latest tag is $latest"

      - name: Generate changelog from PRs
        id: changelog
        run: |
          changelog="What's Changed\n\n"

          # Get PR numbers from merge commits between the last tag and HEAD
          pr_numbers=$(git log ${{ env.USING_TAG }}..HEAD --merges --pretty=format:'%s' \
                       | grep -oE '#[0-9]+' | tr -d '#' | sort -u)

          if [ -z "$pr_numbers" ]; then
            changelog+="No pull requests merged."
          else
            for pr in $pr_numbers; do
              # Get PR details
              info=$(gh pr view $pr --json title,author,number \
                      --jq '"- \(.title) by @\(.author.login) in #\(.number)"')
              changelog+="$info\n"
            done
          fi

          echo -e "CHANGELOG<<EOF\n$changelog\nEOF" >> $GITHUB_ENV

      - name: Create & push Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag v${{ env.APP_VERSION }}
          git push origin v${{ env.APP_VERSION }}

      - name: Create pre-release on GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.APP_VERSION }}
          name: Pre-Release v${{ env.APP_VERSION }}
          body: ${{ env.CHANGELOG }}
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_to_production:
    runs-on: ubuntu-latest
    environment: production
    needs: prepare_release
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy to production
        run: echo "Deploying version to production..."

  finalize_release:
    needs: [prepare_release, deploy_to_production]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Delete pre-release (optional)
        run: |
          gh release delete v${{ env.APP_VERSION }} --yes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Recreate final release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.APP_VERSION }}
          name: Release v${{ env.APP_VERSION }}
          body: ${{ needs.prepare_release.outputs.changelog }}
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}