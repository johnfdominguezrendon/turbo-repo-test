name: Manual Semantic Release

on:
  workflow_dispatch:

jobs:
  deploy_to_prod:
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to production
      run: echo "Deploying to production"
      
  semantic_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GitHub CLI
        run: sudo apt-get install gh -y

      - name: Authenticate gh
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Get latest tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Calculate next version
        run: |
          version=${LATEST_TAG#v}
          IFS='.' read -r major minor patch <<< "$version"
          patch=$((patch + 1))
          next_tag="v$major.$minor.$patch"
          echo "NEW_TAG=$next_tag" >> $GITHUB_ENV

      - name: Generate changelog from PRs
        id: changelog
        run: |
          changelog="What's Changed\n\n"
          prs=$(gh pr list --state merged --search "merged:>${{ env.LATEST_TAG }}" --json number,title,author,mergedAt --jq '.[] | select(.mergedAt != null) | "- \(.title) by @\(.author.login) in #\(.number)"')
          changelog+="$prs"
          echo -e "CHANGELOG<<EOF\n$changelog\nEOF" >> $GITHUB_ENV

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          name: Release ${{ env.NEW_TAG }}
          body: ${{ env.CHANGELOG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}